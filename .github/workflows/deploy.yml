name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - 'client/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (client)
        run: yarn install --frozen-lockfile
        working-directory: client

      - name: Run unit tests (client)
        run: yarn test --ci --watchAll=false
        working-directory: client

      - name: Install dependencies (server)
        run: yarn install --frozen-lockfile
        working-directory: server

      - name: Run tests (server)
        run: yarn test
        working-directory: server
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          NODE_ENV: test
          HOST: 127.0.0.1
          PORT: 3333
          APP_NAME: PawMed
          DRIVE_DISK: local
          DB_CONNECTION: mysql
          MYSQL_HOST: mysql
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_DB_NAME: test

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to server
        run: |
          ssh root@72.60.45.124 '
            cd /app/PawMed &&
            git pull &&
            docker compose up -d --build
          '
